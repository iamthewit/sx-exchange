# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    stock_exchange.mongo_uri: '%env(MONGO_URI)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    StockExchange\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    MongoDB\Client:
        factory: ['StockExchange\Infrastructure\Persistence\MongoClientFactory', 'createClient']
        arguments: ['%stock_exchange.mongo_uri%']

    # Two Exchange Read Repo Implementations:
    stock_exchange.exchange_read_repo.mysql_event_store:
        class: StockExchange\Infrastructure\Persistence\ExchangeMySqlEventStoreReadRepository

    stock_exchange.exchange_read_repo.mongo:
        class: StockExchange\Infrastructure\Persistence\ExchangeMongoReadRepository

    # Set the implementation you want to use:
    # Use this if you want to restore the Exchange state from events:
    StockExchange\Domain\ExchangeReadRepositoryInterface: '@stock_exchange.exchange_read_repo.mysql_event_store'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
